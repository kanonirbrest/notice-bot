# -*- coding: utf-8 -*-
import os
import requests
import io
import tempfile
from dotenv import load_dotenv
import telebot

load_dotenv()

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
VOICEMOD_API_KEY = os.getenv('VOICEMOD_API_KEY')
VOICEMOD_API_URL = os.getenv('VOICEMOD_API_URL', 'https://api.voicemod.net/v1/voice/transform')

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ Voicemod (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
VOICEMOD_EFFECTS = [
    'magic-chords', 'alien', 'baby', 'cave', 'robot', 'man', 'woman', 'titan', 'zombie', 'police-radio',
    'megaphone', 'ghost', 'radio', 'underwater', 'vibrato', 'tremolo', 'telephone', 'muscle', 'blockbuster',
    'cathedral', 'helium', 'demon', 'chipmunk', 'deep', 'double', 'echo', 'fast', 'slow', 'reverse', 'monster'
]
DEFAULT_EFFECT = 'magic-chords'

bot = telebot.TeleBot(TELEGRAM_TOKEN)

def download_voice_file(file_id):
    try:
        file_info = bot.get_file(file_id)
        file_url = f"https://api.telegram.org/file/bot{TELEGRAM_TOKEN}/{file_info.file_path}"
        response = requests.get(file_url)
        response.raise_for_status()
        return io.BytesIO(response.content)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return None

def voicemod_transform(audio_bytes, effect=DEFAULT_EFFECT):
    headers = {
        'Authorization': f'Bearer {VOICEMOD_API_KEY}'
    }
    files = {
        'voice': ('voice.ogg', audio_bytes, 'audio/ogg')
    }
    data = {
        'effect': effect
    }
    try:
        response = requests.post(VOICEMOD_API_URL, headers=headers, files=files, data=data, timeout=60)
        response.raise_for_status()
        return response.content
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ Voicemod API: {e}")
        return None

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, (
        "üé§ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ Voicemod API.\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —è –ø—Ä–∏—à–ª—é –≤–µ—Ä—Å–∏—é —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º!\n\n"
        "/effects ‚Äî —Å–ø–∏—Å–æ–∫ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤\n"
        "/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞"
    ))

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.reply_to(message, (
        "üé§ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:\n\n"
        "1. –û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "2. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —ç—Ñ—Ñ–µ–∫—Ç 'magic-chords'\n"
        "3. –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —ç—Ñ—Ñ–µ–∫—Ç, –Ω–∞–ø–∏—à–∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∏–ª–∏ –ø–æ—Å–ª–µ /effect <–Ω–∞–∑–≤–∞–Ω–∏–µ>\n\n"
        "/effects ‚Äî —Å–ø–∏—Å–æ–∫ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤"
    ))

@bot.message_handler(commands=['effects'])
def effects_command(message):
    bot.reply_to(message, (
        "üéõÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã Voicemod:\n\n" + ', '.join(VOICEMOD_EFFECTS) +
        "\n\n–ü—Ä–∏–º–µ—Ä: –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å –ø–æ–¥–ø–∏—Å—å—é 'robot' –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /effect robot –ø–µ—Ä–µ–¥ –≥–æ–ª–æ—Å–æ–≤—ã–º."
    ))

# –•—Ä–∞–Ω–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
user_effect = {}

@bot.message_handler(commands=['effect'])
def set_effect(message):
    effect = message.text.split(maxsplit=1)[-1].strip().lower()
    if effect in VOICEMOD_EFFECTS:
        user_effect[message.from_user.id] = effect
        bot.reply_to(message, f"‚úÖ –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –≤–∞—à–∏—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö: {effect}")
    else:
        bot.reply_to(message, f"‚ùå –≠—Ñ—Ñ–µ–∫—Ç '{effect}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /effects –¥–ª—è —Å–ø–∏—Å–∫–∞.")

@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç: –∏–∑ –ø–æ–¥–ø–∏—Å–∏ –∏–ª–∏ –∏–∑ user_effect, –∏–Ω–∞—á–µ –¥–µ—Ñ–æ–ª—Ç
        effect = DEFAULT_EFFECT
        if message.caption and message.caption.lower() in VOICEMOD_EFFECTS:
            effect = message.caption.lower()
        elif message.from_user.id in user_effect:
            effect = user_effect[message.from_user.id]
        
        processing_msg = bot.reply_to(message, f"üéõÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º: {effect}...")
        voice_file = download_voice_file(message.voice.file_id)
        if not voice_file:
            bot.edit_message_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", chat_id=processing_msg.chat.id, message_id=processing_msg.message_id)
            return
        result_audio = voicemod_transform(voice_file, effect)
        if result_audio:
            with tempfile.NamedTemporaryFile(suffix='.ogg', delete=False) as temp_file:
                temp_file.write(result_audio)
                temp_file_path = temp_file.name
            with open(temp_file_path, 'rb') as audio_file:
                bot.send_voice(message.chat.id, audio_file, caption=f"üé§ –í–∞—à –≥–æ–ª–æ—Å —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º: {effect}")
            os.unlink(temp_file_path)
            bot.edit_message_text("‚úÖ –ì–æ—Ç–æ–≤–æ!", chat_id=processing_msg.chat.id, message_id=processing_msg.message_id)
        else:
            bot.edit_message_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ Voicemod API", chat_id=processing_msg.chat.id, message_id=processing_msg.message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ: {e}")
        bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ")

if __name__ == '__main__':
    print('üé§ –ë–æ—Ç Voicemod –∑–∞–ø—É—â–µ–Ω!')
    print('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.')
    bot.polling(none_stop=True) 