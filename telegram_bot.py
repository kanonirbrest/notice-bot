# -*- coding: utf-8 -*-
import os
import requests
import io
import tempfile
from dotenv import load_dotenv
import telebot
from pydub import AudioSegment
from pydub.effects import speedup, normalize
import numpy as np

load_dotenv()

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')

bot = telebot.TeleBot(TELEGRAM_TOKEN)

def get_rhymes(word):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–∏—Ñ–º—ã –∫ —Å–ª–æ–≤—É —á–µ—Ä–µ–∑ RhymeBrain API"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π RhymeBrain API
        url = f"https://rhymebrain.com/talk"
        params = {
            'function': 'getRhymes',
            'word': word,
            'lang': 'ru'
        }
        
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()
        
        rhymes = response.json()
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∏—Ñ–º—ã –ø–æ –∫–∞—á–µ—Å—Ç–≤—É
        filtered_rhymes = []
        for rhyme in rhymes:
            if rhyme.get('score', 0) > 0:  # –¢–æ–ª—å–∫–æ —Ä–∏—Ñ–º—ã —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Å–∫–æ—Ä–æ–º
                filtered_rhymes.append({
                    'word': rhyme.get('word', ''),
                    'score': rhyme.get('score', 0),
                    'freq': rhyme.get('freq', 0)
                })
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å–∫–æ—Ä—É (–∫–∞—á–µ—Å—Ç–≤—É —Ä–∏—Ñ–º—ã)
        filtered_rhymes.sort(key=lambda x: x['score'], reverse=True)
        
        return filtered_rhymes
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∏—Ñ–º: {e}")
        # Fallback –Ω–∞ Datamuse API
        try:
            url = f"https://api.datamuse.com/words"
            params = {
                'rel_rhy': word,
                'max': 10,
                'lang': 'ru'
            }
            
            response = requests.get(url, params=params, timeout=10)
            response.raise_for_status()
            
            rhymes = response.json()
            return rhymes
        except:
            return []

def format_rhymes(rhymes, original_word):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∏—Ñ–º –¥–ª—è –≤—ã–≤–æ–¥–∞"""
    if not rhymes:
        return f"üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–∏—Ñ–º—ã –∫ —Å–ª–æ–≤—É '{original_word}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ!"
    
    result = f"üéµ –†–∏—Ñ–º—ã –∫ —Å–ª–æ–≤—É '{original_word}':\n\n"
    
    for i, rhyme in enumerate(rhymes[:10], 1):
        word = rhyme.get('word', '')
        score = rhyme.get('score', 0)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∏—Ñ–º—ã
        if score > 1000:
            emoji = "‚≠ê"
        elif score > 500:
            emoji = "‚ú®"
        else:
            emoji = "üí´"
        
        result += f"{i}. {emoji} {word}\n"
    
    result += f"\n–ù–∞–π–¥–µ–Ω–æ —Ä–∏—Ñ–º: {len(rhymes)}"
    return result

def apply_audio_effect(audio_file, effect_type="echo"):
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ
        audio = AudioSegment.from_file(audio_file)
        
        if effect_type == "echo":
            # –≠—Ñ—Ñ–µ–∫—Ç —ç—Ö–æ
            delay_ms = 200
            decay = 0.5
            echo = audio - (decay * 20)  # –£–º–µ–Ω—å—à–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
            combined = audio.overlay(echo, position=delay_ms)
            
        elif effect_type == "reverb":
            # –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–≤–µ—Ä–±
            reverb = audio - 10  # –£–º–µ–Ω—å—à–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
            combined = audio.overlay(reverb, position=100)
            combined = combined.overlay(reverb, position=200)
            
        elif effect_type == "speedup":
            # –£—Å–∫–æ—Ä–µ–Ω–∏–µ
            combined = speedup(audio, playback_speed=1.5)
            
        elif effect_type == "slowdown":
            # –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ
            combined = speedup(audio, playback_speed=0.7)
            
        elif effect_type == "pitch_up":
            # –ü–æ–≤—ã—à–µ–Ω–∏–µ —Ç–æ–Ω–∞
            combined = audio._spawn(audio.raw_data, overrides={'frame_rate': int(audio.frame_rate * 1.2)})
            combined = combined.set_frame_rate(audio.frame_rate)
            
        elif effect_type == "pitch_down":
            # –ü–æ–Ω–∏–∂–µ–Ω–∏–µ —Ç–æ–Ω–∞
            combined = audio._spawn(audio.raw_data, overrides={'frame_rate': int(audio.frame_rate * 0.8)})
            combined = combined.set_frame_rate(audio.frame_rate)
            
        elif effect_type == "normalize":
            # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
            combined = normalize(audio)
            
        else:
            # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —ç—Ö–æ
            delay_ms = 200
            decay = 0.5
            echo = audio - (decay * 20)
            combined = audio.overlay(echo, position=delay_ms)
        
        return combined
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞: {e}")
        return None

def download_voice_file(file_id):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    try:
        file_info = bot.get_file(file_id)
        file_url = f"https://api.telegram.org/file/bot{TELEGRAM_TOKEN}/{file_info.file_path}"
        
        response = requests.get(file_url)
        response.raise_for_status()
        
        return io.BytesIO(response.content)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return None

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, (
        "üéµ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∏—Ñ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
        "‚Ä¢ –ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ ‚Üí –Ω–∞–π–¥—É —Ä–∏—Ñ–º—ã\n"
        "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –ø—Ä–∏–º–µ–Ω—é —ç—Ñ—Ñ–µ–∫—Ç\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\n"
        "/effects - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤"
    ))

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.reply_to(message, (
        "üéµ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:\n\n"
        "**–ü–æ–∏—Å–∫ —Ä–∏—Ñ–º:**\n"
        "1. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ\n"
        "2. –ë–æ—Ç –Ω–∞–π–¥–µ—Ç –∫ –Ω–µ–º—É —Ä–∏—Ñ–º—ã\n\n"
        "**–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ:**\n"
        "1. –û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "2. –í—ã–±–µ—Ä–∏ —ç—Ñ—Ñ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞\n"
        "3. –ü–æ–ª—É—á–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /effects –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤!"
    ))

@bot.message_handler(commands=['effects'])
def effects_command(message):
    bot.reply_to(message, (
        "üéõÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:\n\n"
        "‚Ä¢ **echo** - —ç—Ö–æ\n"
        "‚Ä¢ **reverb** - —Ä–µ–≤–µ—Ä–±–µ—Ä–∞—Ü–∏—è\n"
        "‚Ä¢ **speedup** - —É—Å–∫–æ—Ä–µ–Ω–∏–µ\n"
        "‚Ä¢ **slowdown** - –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ\n"
        "‚Ä¢ **pitch_up** - –ø–æ–≤—ã—à–µ–Ω–∏–µ —Ç–æ–Ω–∞\n"
        "‚Ä¢ **pitch_down** - –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Ç–æ–Ω–∞\n"
        "‚Ä¢ **normalize** - –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏ —ç—Ñ—Ñ–µ–∫—Ç!"
    ))

@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = bot.reply_to(message, "üéµ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        voice_file = download_voice_file(message.voice.file_id)
        if not voice_file:
            bot.edit_message_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 
                                chat_id=processing_msg.chat.id, 
                                message_id=processing_msg.message_id)
            return
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(suffix='.ogg', delete=False) as temp_file:
            temp_file.write(voice_file.getvalue())
            temp_file_path = temp_file.name
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —ç—Ö–æ)
        processed_audio = apply_audio_effect(temp_file_path, "echo")
        
        if processed_audio:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ
            output_path = temp_file_path.replace('.ogg', '_processed.ogg')
            processed_audio.export(output_path, format='ogg')
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ
            with open(output_path, 'rb') as audio_file:
                bot.send_voice(message.chat.id, audio_file, 
                             caption="üéõÔ∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —ç—Ö–æ")
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            os.unlink(temp_file_path)
            os.unlink(output_path)
            
            bot.edit_message_text("‚úÖ –ê—É–¥–∏–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —ç—Ö–æ.", 
                                chat_id=processing_msg.chat.id, 
                                message_id=processing_msg.message_id)
        else:
            bot.edit_message_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –∫ –∞—É–¥–∏–æ", 
                                chat_id=processing_msg.chat.id, 
                                message_id=processing_msg.message_id)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ")

@bot.message_handler(func=lambda message: True)
def handle_word(message):
    word = message.text.strip().lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞
    if word.startswith('/'):
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–ª–æ–≤–æ (–Ω–µ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∏ –Ω–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ)
    if not word or len(word) > 50:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ (–Ω–µ –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ
    search_msg = bot.reply_to(message, f"üîç –ò—â—É —Ä–∏—Ñ–º—ã –∫ —Å–ª–æ–≤—É '{word}'...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∏—Ñ–º—ã
    rhymes = get_rhymes(word)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result = format_rhymes(rhymes, word)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    bot.edit_message_text(
        result,
        chat_id=search_msg.chat.id,
        message_id=search_msg.message_id
    )

if __name__ == '__main__':
    print('üéµ –ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∏—Ñ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ –∑–∞–ø—É—â–µ–Ω!')
    print('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.')
    bot.polling(none_stop=True) 